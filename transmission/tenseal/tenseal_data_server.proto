syntax = "proto3";

message query_msg_parse_server{
  int32 cid = 1;
  int32 qid = 2;
  string op = 3;
  string table_name = 4;
  string column_name = 5;
}

message enc_query_result {
  bytes enc_result= 1;
}

message buffer_query_msg {
  int64 hash = 1;
}

message query_result_result {
  bytes result = 1;
  bool available = 2;
}

message n_th_query_msg {
  int32 cid = 1;
  int32 qid = 2;
  int32 n = 3;
  string mode = 4; // "clean" / "encypted"
  string table_name = 5;
  string column_name = 6;
}

message n_th_query_result {
  int32 cid = 1;
  int32 qid = 2;
  int32 n = 3;
  int64 hash = 4;
  bytes result = 5;
  bool available = 6;
}

message query_mode_using_hash_msg {
  bytes hash = 1;
}

message query_mode_using_hash_result {
  bytes mode = 1;
  bytes available = 2;
}

message query_median_posi_msg {
  int32 cid = 1;
  int32 qid = 2;
  string table_name = 3;
  string column_name = 4;
  bytes median = 5;
  bytes avg = 6;
  bytes std = 7;
}

message query_median_posi_result {
  bytes greater = 3;
  bytes less_e = 4;
}

message query_count_msg {
  string table_name = 3;
  string column_name = 4;
}

message query_nearest_msg {
  string table_name = 3;
  string column_name = 4;
  bytes value = 5;
}

message query_nearest_result {
  bytes value1 = 1;
  bytes value2 = 2;
  int32 count = 3;
}

service DatabaseServerService {
  rpc query_operation(query_msg_parse_server) returns(enc_query_result);
  rpc noise_query_operation(query_msg_parse_server) returns(enc_query_result);
  rpc query_from_buffer(buffer_query_msg) returns(query_result_result);
  rpc n_th_query_operation(n_th_query_msg) returns(n_th_query_result);
  rpc query_mode_using_hash(query_mode_using_hash_msg) returns(query_mode_using_hash_result);
  rpc query_median_posi(query_median_posi_msg) returns(query_median_posi_result);
  rpc get_count(query_count_msg) returns(enc_query_result);
  rpc get_nearest(query_nearest_msg) returns(query_nearest_msg);
}
