# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tenseal_key_server.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x18tenseal_key_server.proto\x1a\x1bgoogle/protobuf/empty.proto\"]\n\x19query_result_parse_server\x12\x0b\n\x03\x63id\x18\x01 \x01(\x05\x12\x0b\n\x03qid\x18\x02 \x01(\x05\x12\x12\n\nip_address\x18\x03 \x01(\t\x12\x12\n\nenc_result\x18\x04 \x01(\x0c\"\x1c\n\x06vector\x12\x12\n\nvector_msg\x18\x01 \x01(\x0c\"8\n\x0b\x64iv_vectors\x12\x14\n\x0c\x64ividend_msg\x18\x01 \x01(\x0c\x12\x13\n\x0b\x64ivisor_msg\x18\x02 \x01(\x0c\"\"\n\x0e\x62oolean_result\x12\x10\n\x08\x62ool_msg\x18\x01 \x01(\x08\"@\n\x16generate_noise_request\x12\x0b\n\x03\x63id\x18\x01 \x01(\x05\x12\x0b\n\x03qid\x18\x02 \x01(\x05\x12\x0c\n\x04type\x18\x03 \x01(\t\">\n\x11get_noise_request\x12\x0f\n\x07\x64\x62_name\x18\x01 \x01(\x05\x12\x0b\n\x03\x63id\x18\x02 \x01(\x05\x12\x0b\n\x03qid\x18\x03 \x01(\x05\"\x1a\n\x05noise\x12\x11\n\tnoise_msg\x18\x01 \x01(\x0c\x32\xc9\x02\n\x10KeyServerService\x12M\n\x17return_enc_query_result\x12\x1a.query_result_parse_server\x1a\x16.google.protobuf.Empty\x12\x41\n\x0egenerate_noise\x12\x17.generate_noise_request\x1a\x16.google.protobuf.Empty\x12\'\n\tget_noise\x12\x12.get_noise_request\x1a\x06.noise\x12,\n\x10\x62oolean_positive\x12\x07.vector\x1a\x0f.boolean_result\x12#\n\x0fsqrt_enc_vector\x12\x07.vector\x1a\x07.vector\x12\'\n\x0e\x64iv_enc_vector\x12\x0c.div_vectors\x1a\x07.vectorb\x06proto3')



_QUERY_RESULT_PARSE_SERVER = DESCRIPTOR.message_types_by_name['query_result_parse_server']
_VECTOR = DESCRIPTOR.message_types_by_name['vector']
_DIV_VECTORS = DESCRIPTOR.message_types_by_name['div_vectors']
_BOOLEAN_RESULT = DESCRIPTOR.message_types_by_name['boolean_result']
_GENERATE_NOISE_REQUEST = DESCRIPTOR.message_types_by_name['generate_noise_request']
_GET_NOISE_REQUEST = DESCRIPTOR.message_types_by_name['get_noise_request']
_NOISE = DESCRIPTOR.message_types_by_name['noise']
query_result_parse_server = _reflection.GeneratedProtocolMessageType('query_result_parse_server', (_message.Message,), {
  'DESCRIPTOR' : _QUERY_RESULT_PARSE_SERVER,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:query_result_parse_server)
  })
_sym_db.RegisterMessage(query_result_parse_server)

vector = _reflection.GeneratedProtocolMessageType('vector', (_message.Message,), {
  'DESCRIPTOR' : _VECTOR,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:vector)
  })
_sym_db.RegisterMessage(vector)

div_vectors = _reflection.GeneratedProtocolMessageType('div_vectors', (_message.Message,), {
  'DESCRIPTOR' : _DIV_VECTORS,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:div_vectors)
  })
_sym_db.RegisterMessage(div_vectors)

boolean_result = _reflection.GeneratedProtocolMessageType('boolean_result', (_message.Message,), {
  'DESCRIPTOR' : _BOOLEAN_RESULT,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:boolean_result)
  })
_sym_db.RegisterMessage(boolean_result)

generate_noise_request = _reflection.GeneratedProtocolMessageType('generate_noise_request', (_message.Message,), {
  'DESCRIPTOR' : _GENERATE_NOISE_REQUEST,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:generate_noise_request)
  })
_sym_db.RegisterMessage(generate_noise_request)

get_noise_request = _reflection.GeneratedProtocolMessageType('get_noise_request', (_message.Message,), {
  'DESCRIPTOR' : _GET_NOISE_REQUEST,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:get_noise_request)
  })
_sym_db.RegisterMessage(get_noise_request)

noise = _reflection.GeneratedProtocolMessageType('noise', (_message.Message,), {
  'DESCRIPTOR' : _NOISE,
  '__module__' : 'tenseal_key_server_pb2'
  # @@protoc_insertion_point(class_scope:noise)
  })
_sym_db.RegisterMessage(noise)

_KEYSERVERSERVICE = DESCRIPTOR.services_by_name['KeyServerService']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _QUERY_RESULT_PARSE_SERVER._serialized_start=57
  _QUERY_RESULT_PARSE_SERVER._serialized_end=150
  _VECTOR._serialized_start=152
  _VECTOR._serialized_end=180
  _DIV_VECTORS._serialized_start=182
  _DIV_VECTORS._serialized_end=238
  _BOOLEAN_RESULT._serialized_start=240
  _BOOLEAN_RESULT._serialized_end=274
  _GENERATE_NOISE_REQUEST._serialized_start=276
  _GENERATE_NOISE_REQUEST._serialized_end=340
  _GET_NOISE_REQUEST._serialized_start=342
  _GET_NOISE_REQUEST._serialized_end=404
  _NOISE._serialized_start=406
  _NOISE._serialized_end=432
  _KEYSERVERSERVICE._serialized_start=435
  _KEYSERVERSERVICE._serialized_end=764
# @@protoc_insertion_point(module_scope)
